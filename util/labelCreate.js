const mongoose = require("mongoose"); // Import th∆∞ vi·ªán mongoose
const Label = require("../models/label"); // Import model label

// üîπ Chu·ªói k·∫øt n·ªëi ƒë·∫øn MongoDB Atlas
const urlConnect = "mongodb+srv://brogrammers2527:brogrammers2527@cluster0-mwti3.mongodb.net/test?retryWrites=true&w=majority";

// ‚úÖ H√†m k·∫øt n·ªëi MongoDB
const connectDB = async () => {
  try {
    await mongoose.connect(urlConnect, { useNewUrlParser: true, useUnifiedTopology: true });
    console.log("‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng!");
  } catch (error) {
    console.error("‚ùå L·ªói k·∫øt n·ªëi MongoDB:", error.message);
    process.exit(1); // D·ª´ng ch∆∞∆°ng tr√¨nh n·∫øu l·ªói
  }
};

// ‚úÖ H√†m t·∫°o danh s√°ch nh√£n hi·ªáu m·ªõi
const createLabels = async () => {
  try {
    const newLabel = new Label({
      list: [
        "Kim ƒê·ªìng",
        "Nh√† Xu·∫•t B·∫£n Tr·∫ª",
        "Alpha Books",
        "NXB Gi√°o D·ª•c",
        "First News - Tr√≠ Vi·ªát",
        "NXB VƒÉn H·ªçc",
        "NXB Ch√≠nh Tr·ªã Qu·ªëc Gia",
        "NXB Khoa H·ªçc & K·ªπ Thu·∫≠t",
        "NXB Th·∫ø Gi·ªõi"
      ]
    });

    await newLabel.save();
    console.log("‚úÖ Danh s√°ch nh√£n hi·ªáu ƒë√£ ƒë∆∞·ª£c l∆∞u th√†nh c√¥ng!");
  } catch (error) {
    console.error("‚ùå L·ªói khi l∆∞u danh s√°ch nh√£n hi·ªáu:", error.message);
  }
};

// ‚úÖ G·ªçi h√†m k·∫øt n·ªëi v√† t·∫°o danh s√°ch nh√£n hi·ªáu
const start = async () => {
  await connectDB();
  await createLabels();
};

// G·ªçi h√†m ch√≠nh
start();
